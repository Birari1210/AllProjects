package com.yash.dao;

import java.util.ArrayList;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.query.Query;
import org.springframework.orm.hibernate5.HibernateTransactionManager;

import com.yash.model.Employee;
import com.yash.model.Irm;
import com.yash.model.Project;


public class ProjectDao {
	
	private HibernateTransactionManager hbmObj;

	public void setHbmObj(HibernateTransactionManager hbmObj) {
		this.hbmObj = hbmObj;
	}

//	public void saveProject(Project pObj)
//	{
//		SessionFactory sf =hbmObj.getSessionFactory();
//	    Session objSession = sf.openSession();
//	    Transaction t= objSession.beginTransaction();
//		  objSession.save(pObj);
//		  t.commit();
//		  System.out.println("Project data is save");
//		  objSession.close();
//	}
	
	
	
	 public void getProjectNameWithEmployee() {  //done
   	  System.out.println("------ 1 & 2)Find out number of employee working on different project.-----------");
    	SessionFactory sf = hbmObj.getSessionFactory();
 		Session objSession = sf.openSession();
 		Transaction t = objSession.beginTransaction();
 		
 		
 		String HQL ="SELECT pro.projectid, pro.projectName,count(emp) FROM Project pro  LEFT JOIN  pro.employee emp GROUP BY pro";
		
		Query query= objSession.createQuery(HQL, Object[].class);
		List<Object[]> list = ((org.hibernate.query.Query<Object[]>) query).list();
		
		for(Object[] objects : list) {
			Integer pid = (Integer) objects[0];

			String projectname=(String)objects[1];
			Long countemp=(Long)objects[2];
			System.out.println("Project id :"+pid);
			System.out.println("Project_Name:"+projectname);
			System.out.println("Total No Of Emplyee:"+countemp);
		}
     }
	
	 public List<Irm> getdAllIrm() {
			System.out.println("3-----Print only IRM details--------");
			SessionFactory sf = hbmObj.getSessionFactory();
			Session objSession = sf.openSession();
			Transaction t = objSession.beginTransaction();
			List<Irm> ilist = new ArrayList<Irm>();
			Criteria ctr = objSession.createCriteria(Irm.class);
			ilist = ctr.list();
			return ilist;
		}
		
	 
	 
	 
	 
	 /*	public void MaxSalaryWithbaselocation() { done
     SessionFactory sf = hbmObj.getSessionFactory();
     Session objSession = sf.openSession();
     Transaction t = objSession.beginTransaction();
     
     System.out.println("-------- 4 Print maximum salary of each base location------");
     
     String HQL ="SELECT blc.baseLocationName,blc.baseLocationId,Max(emp.salary) FROM BaseLocation blc "
             + "LEFT JOIN  blc.employee emp GROUP BY blc";
     Query query= objSession.createQuery(HQL, Object[].class);
		List<Object[]> list = ((org.hibernate.query.Query<Object[]>) query).list();
     for(Object[] objects : list) {
         String blocname=(String)objects[0];
         Integer blocid =(Integer)objects[1];
         Double  maxsalary =(Double)objects[2];
         System.out.println("BaseLoaction:"+blocname);
         System.out.println("Baselocatio id:"+blocid);
         System.out.println("maximum salary by dept:"+maxsalary);
     }
}

*/
	 
	 
		public void MaxSalarywithProject() { //done
			SessionFactory sf = hbmObj.getSessionFactory();
			Session objSession = sf.openSession();
			Transaction t = objSession.beginTransaction();
			
			System.out.println("------ 5 Print maximum salary of each Project------");
			
			String HQL ="SELECT pro.projectName,Max(emp.salary) FROM Project pro LEFT JOIN  pro.employee emp GROUP BY pro";
			
			Query query= objSession.createQuery(HQL, Object[].class);
			List<Object[]> list = ((org.hibernate.query.Query<Object[]>) query).list();
			
			for(Object[] objects : list) {
				String projectname=(String)objects[0];
				Double  maxsalary =(Double)objects[1];
				System.out.println("project_name:"+projectname);
				System.out.println("maximum salary by project:"+maxsalary);
			}
		}
		
		
		
		
		public void MinSalarywithbaselocation() {
			SessionFactory sf = hbmObj.getSessionFactory();
			Session objSession = sf.openSession();
			Transaction t = objSession.beginTransaction();
			
			System.out.println("----------6 Print minimum salary of each base location--------------");
			
		//	String HQL ="SELECT bloc.blocname,Min(emp.salary) FROM BaseLocation bloc LEFT JOIN  bloc.employee emp GROUP BY bloc";
			
			String HQL ="SELECT blc.baseLocationName,blc.baseLocationId,min(emp.salary) FROM BaseLocation blc "
		             + "LEFT JOIN  blc.employee emp GROUP BY blc";
			Query query= objSession.createQuery(HQL, Object[].class);
			List<Object[]> list = ((org.hibernate.query.Query<Object[]>) query).list();
			
			for(Object[] objects : list) {
				String blocname=(String)objects[0];
		        Integer blocid =(Integer)objects[1];
				Double  minsalary =(Double)objects[2];
				System.out.println("BaseLoaction:"+blocname);
				System.out.println("minimum salary by dept:"+minsalary);
			}
			
		}
		
		
	   public void MinSalarywithProject() { //done
			SessionFactory sf = hbmObj.getSessionFactory();
			Session objSession = sf.openSession();
			Transaction t = objSession.beginTransaction();
			
			System.out.println("-------------- 7 Print minimum salary of each Project-------------");
			
			String HQL ="SELECT pro.projectName,Min(emp.salary) FROM Project pro LEFT JOIN  pro.employee emp GROUP BY pro";
			
			Query query= objSession.createQuery(HQL, Object[].class);
			List<Object[]> list = ((org.hibernate.query.Query<Object[]>) query).list();
			
			for(Object[] objects : list) {
				String projectname=(String)objects[0];
				Double  minsalary =(Double)objects[1];
				System.out.println("project_name:"+projectname);
				System.out.println("minimum salary by project:"+minsalary);
			}
		}
		
	
	 public void getDepartmentWithAvgSalary() { // done
			SessionFactory sf = hbmObj.getSessionFactory();
			Session objSession = sf.openSession();
			Transaction t = objSession.beginTransaction();
			
			System.out.println("----------- 9 Print Average salary of each Department-------------");
			
			String HQL ="SELECT dept.deptid,dept.dname,Avg(emp.salary) FROM Department dept  JOIN  dept.employee emp GROUP BY dept";
			
			Query query= objSession.createQuery(HQL, Object[].class);
			List<Object[]> list = ((org.hibernate.query.Query<Object[]>) query).list();
			
			for(Object[] objects : list) {
				Integer deptid=(Integer)objects[0];
				String deptname=(String)objects[1];
				Double  avgsalary=(Double)objects[2];
				System.out.print("Department_Id :  "+deptid);
				System.out.print("  Department_Name : "+deptname);
				System.out.println("  Average of  salary by Department:"+avgsalary);
			}
		}
	
	 //11
	 public List<Project> getProjrctDetailWithEmployee(){

			SessionFactory sf = hbmObj.getSessionFactory();
			Session objSession = sf.openSession();
			Transaction t = objSession.beginTransaction();
			List<Project> plist = new ArrayList<Project>();
			Criteria ctr = objSession.createCriteria(Project.class);
			plist = ctr.list();
			return plist;
			
		}
	 
	 //12
	 public List<Employee> getEmployeeAndIrmName()
		{
			SessionFactory sf = hbmObj.getSessionFactory();
			Session objSession = sf.openSession();
			Transaction t = objSession.beginTransaction();
			List<Employee> clist = new ArrayList<Employee>();
			Criteria ctr = objSession.createCriteria(Employee.class);
			//clist = ctr.list();
			return clist;
			
			
		}

}
